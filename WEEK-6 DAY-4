//Q1

import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        /*
         * Enter your code here. Read input from STDIN. Print output to STDOUT. Your
         * class should be named Solution.
         */
        Scanner input = new Scanner(System.in);
        int num1 = input.nextInt();
        double marktotal[][] = new double[num1][3];
        for (int i = 0; i < num1; i++) {
            for (int j = 0; j < 3; j++) {
                marktotal[i][j] = input.nextDouble();
            }
        }
        for(int i=0;i<num1;i++){
            Arrays.sort(marktotal[i]);
        }
        for(int i=0;i<num1;i++){
            double av=(marktotal[i][1]+marktotal[i][2])/2;
            System.out.print(av+" ");
            
        }

    }
}

//Q2

import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        /*
         * Enter your code here. Read input from STDIN. Print output to STDOUT. Your
         * class should be named Solution.
         */
        Scanner input = new Scanner(System.in);
        int num1 = input.nextInt();
        int ar1[] = new int[num1];
        for (int i = 0; i < num1; i++) {
            ar1[i] = input.nextInt();
        }

        int num2 = input.nextInt();
        int ar2[] = new int[num2];
        for (int i = 0; i < num2; i++) {
            ar2[i] = input.nextInt();
        }

        int num3 = input.nextInt();
        int ar3[] = new int[num3];
        for (int i = 0; i < num3; i++) {
            ar3[i] = input.nextInt();
        }
        Arrays.sort(ar1);
        Arrays.sort(ar2);
        Arrays.sort(ar3);
        int i = 0, j = 0, k = 0;

        while (i < ar1.length && j < ar2.length && k < ar3.length) {
            if (ar1[i] == ar2[j] && ar1[i] == ar3[k]) {
                System.out.print(ar1[i] + " ");
                i++;
                j++;
                k++;
            } else if (ar1[i] < ar2[j]) {
                i++;
            } else if (ar2[j] < ar3[k]) {
                j++;
            } else {
                k++;
            }
        }
    }
}
